#!/bin/bash

TMP_INPUT=$(mktemp)
TMP_MENU=$(mktemp)

# === Detect Domain Controller ===
detect_dc() {
    local dc
    dc=$(hostname -f)
    if ! ping -c1 -W1 "$dc" &>/dev/null; then
        realm=$(samba-tool testparm --parameter-name="realm" 2>/dev/null | awk '{print $1}')
        dc=$(host -t A "$realm" | awk '/has address/ {print $NF; exit}')
    fi
    echo "$dc"
}

# === Prompt for Admin Password ===
prompt_admin_password() {
    while true; do
        ADMIN_PASS=$(dialog --insecure --passwordbox "Enter the Samba Administrator password:" 8 50 3>&1 1>&2 2>&3) || exit 1
        if samba-tool user list -H ldap://"$DC" -U "Administrator%$ADMIN_PASS" --option="password server = *" &>/dev/null; then
            break
        else
            dialog --msgbox "Authentication failed. Please try again." 7 50
        fi
    done
}

# === Password Reset Function with Retry & Confirmation ===
password_reset() {
    # 1) Fetch users
    samba-tool user list -H ldap://"$DC" -U "Administrator%$ADMIN_PASS" | tr '[:lower:]' '[:upper:]' > "$TMP_INPUT"

    if [[ ! -s "$TMP_INPUT" ]]; then
        dialog --msgbox "No users found to reset password." 7 50
        return
    fi

    # 2) Build menu for dialog
    MENU_ITEMS=()
    i=1
    while read -r user; do
        MENU_ITEMS+=("$i" "$user")
        ((i++))
    done < "$TMP_INPUT"

    # 3) Show dialog menu
    USER_CHOICE=$(dialog \
        --clear \
        --backtitle "Active Directory Password Reset" \
        --title "Select a User" \
        --menu "Choose a user to reset password:" 20 60 15 \
        "${MENU_ITEMS[@]}" \
        3>&1 1>&2 2>&3)

    # Exit if cancel
    if [[ -z "$USER_CHOICE" ]]; then
        clear
        echo "No user selected. Exiting..."
        return
    fi

    # Get the actual username
    SELECTED_USER=$(sed -n "${USER_CHOICE}p" "$TMP_INPUT")

    # === Retry loop for password reset ===
    while true; do
        # Prompt for new password
        NEW_PASS=$(dialog --clear \
            --backtitle "Active Directory Password Reset" \
            --title "New Password" \
            --passwordbox "Enter the new password for $SELECTED_USER:" 10 50 \
            3>&1 1>&2 2>&3)

        # Exit if cancel
        if [[ -z "$NEW_PASS" ]]; then
            clear
            echo "Password reset canceled."
            return
        fi

        # Prompt to confirm new password
        CONFIRM_PASS=$(dialog --clear \
            --backtitle "Active Directory Password Reset" \
            --title "Confirm Password" \
            --passwordbox "Re-enter the new password for $SELECTED_USER:" 10 50 \
            3>&1 1>&2 2>&3)

        # Exit if cancel
        if [[ -z "$CONFIRM_PASS" ]]; then
            clear
            echo "Password reset canceled."
            return
        fi

        # Check if passwords match
        if [[ "$NEW_PASS" != "$CONFIRM_PASS" ]]; then
            dialog --msgbox "Passwords do not match. Please try again." 7 50
            continue
        fi

        # Apply password reset
        if samba-tool user setpassword "$SELECTED_USER" --newpassword="$NEW_PASS" -H ldap://"$DC" -U "Administrator%$ADMIN_PASS"; then
            dialog --msgbox "Password for $SELECTED_USER has been successfully reset!" 7 60
            break
        else
            dialog --yesno "Failed to reset password. Maybe complexity rules. Retry?" 8 60
            RESPONSE=$?
            if [[ $RESPONSE -eq 1 ]]; then
                clear
                echo "Password reset aborted."
                break
            fi
        fi
    done

    # Cleanup
    rm -f "$TMP_INPUT"
}

# === Main Script ===
DC=$(detect_dc)
prompt_admin_password
password_reset
